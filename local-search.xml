<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>稀疏数组</title>
    <link href="/2022/10/18/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/"/>
    <url>/2022/10/18/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h1 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h1><h2 id="1-为什么使用稀疏数组"><a href="#1-为什么使用稀疏数组" class="headerlink" title="1.为什么使用稀疏数组"></a>1.为什么使用稀疏数组</h2><p>我们通常会遇到这样的情况，在一个二维数组中，只有少数几个位置存储了有效数据，其他位置都为0，这时，原来的二维数组就显得浪费内存空间了。</p><blockquote><p>这时我们使用稀疏数组</p><p>将二维数组的总行数、总列数、有效数据个数，及有效数据所在的行数、列数及其值存储，这样既保留了原来数组的特征，同时压缩了占用的内存空间。</p></blockquote><p><strong>举个例子</strong></p><p>​                      <strong>这是一个原始的二维数组</strong></p><p><img src="/_posts/%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84/%E5%8E%9F%E5%A7%8B%E6%95%B0%E7%BB%84.png" alt="原始二维数组"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> DataStructure;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">sparesArray</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> anArray[][] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[<span class="hljs-number">11</span>][<span class="hljs-number">11</span>];<br>        anArray[<span class="hljs-number">2</span>][<span class="hljs-number">3</span>] = <span class="hljs-number">1</span>;<br>        anArray[<span class="hljs-number">3</span>][<span class="hljs-number">4</span>] = <span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; anArray.length; i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;j &lt; anArray[i].length; j++)&#123;<br>                System.out.print(anArray[i][j]+<span class="hljs-string">&quot;\t&quot;</span>);<br>            &#125;<br>            System.out.println();<br>        &#125;<br></code></pre></td></tr></table></figure><h2 id="2-稀疏数组的实现"><a href="#2-稀疏数组的实现" class="headerlink" title="2.稀疏数组的实现"></a>2.稀疏数组的实现</h2><h3 id="2-1-我们希望稀疏是这样的"><a href="#2-1-我们希望稀疏是这样的" class="headerlink" title="2.1 我们希望稀疏是这样的"></a>2.1 我们希望稀疏是这样的</h3><p><strong>拿以上的普通二维数组为例</strong></p><blockquote><p> 行          列           数</p><p> 11         11           2         &#x2F;&#x2F;稀疏数组的第一行存放的是原始数组的行、列、有效数据的总数</p><p>  2            3            1         &#x2F;&#x2F;第二行的”行“存储了第一个有效数据的行号；”列“存储了列号；”数“存储了有效数据的具体值</p><p> 3            4             2        &#x2F;&#x2F;同上，记录第二个数据</p></blockquote><h3 id="2-2稀疏数组的代码实现"><a href="#2-2稀疏数组的代码实现" class="headerlink" title="2.2稀疏数组的代码实现"></a>2.2稀疏数组的代码实现</h3>]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript学习</title>
    <link href="/2022/10/18/JavaScript%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/10/18/JavaScript%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaScript部分"><a href="#JavaScript部分" class="headerlink" title="JavaScript部分"></a>JavaScript部分</h1><h2 id="1-两种使用JavaScript的方式"><a href="#1-两种使用JavaScript的方式" class="headerlink" title="1.两种使用JavaScript的方式"></a>1.两种使用JavaScript的方式</h2><p><strong>内部引用</strong>和<strong>外部引用</strong></p><h3 id="1-1外部引用"><a href="#1-1外部引用" class="headerlink" title="1.1外部引用"></a>1.1外部引用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/js1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>//这里将js写成独立的文件，使用的是外部引用<br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="1-2内部引用"><a href="#1-2内部引用" class="headerlink" title="1.2内部引用"></a>1.2内部引用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br>      &lt;-----!可以直接将javascript代码写到script标签里------&gt;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2.数据类型"></a>2.数据类型</h2><p>在JavaScript中一般没有像Java一样需要规定的数据类型</p><p>基本上用var 都可以解决</p><p>但是var一般定义的是局部变量</p><p>我们可以使用let 全局变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>;<span class="hljs-comment">//相当于 let i = 1;</span><br></code></pre></td></tr></table></figure><p>javascript中可以使用长字符和字符模板</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&#x27;use strict&#x27;</span>;<span class="hljs-comment">//使用严格模式</span><br><span class="hljs-keyword">var</span> name = <span class="hljs-string">&quot;Mark&quot;</span>;<br><span class="hljs-keyword">var</span> age = <span class="hljs-number">3</span>;<br><span class="hljs-keyword">var</span> str = <span class="hljs-string">`name=<span class="hljs-subst">$&#123;name&#125;</span>,age=<span class="hljs-subst">$&#123;age&#125;</span>`</span>;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str);<br></code></pre></td></tr></table></figure><p>这里可以直接使用 &#96;&#96;表示长字符</p>]]></content>
    
    
    <categories>
      
      <category>javascript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>打个照面</title>
    <link href="/2022/10/11/%E6%89%93%E4%B8%AA%E7%85%A7%E9%9D%A2/"/>
    <url>/2022/10/11/%E6%89%93%E4%B8%AA%E7%85%A7%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>​      这是我搭建的第一个博客，在这里首先鸣谢欣欣酱~，是她先搭了个blog然后建议我试试,我觉得很神奇也蛮心动的，终于在今天动手自己建了一个。</p><p>​      搭建这个博客的初衷也许很单纯，想把生活中的碎碎念或者自己热爱的东西，通过互联全球的神奇的网络，分享给大家，当然啦，还有我自大学生涯起的journey-recording，不管是看的书、电影、番剧，还是敲出来的代码、学到的公式，这样一段崭新而不乏挑战的历程，怎么能不记录下来呢。</p><p>​      就让我们从</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br>   <span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>     <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello,world&quot;</span>);<br>     <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">myJournerStart</span>&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;Hello,world&quot;</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>​     开始吧！</p>]]></content>
    
    
    <categories>
      
      <category>Start</category>
      
    </categories>
    
    
    <tags>
      
      <tag>chatting</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/11/hello-world/"/>
    <url>/2022/10/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
